<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.avic.zemic.first.mapper.StudentMapper">
    <resultMap id="BaseResultMap" type="com.avic.zemic.first.model.Student">
        <id column="studentId" property="studentId" jdbcType="BIGINT" />
        <result column="studentName" property="studentName" jdbcType="VARCHAR" />
        <result column="studentAge" property="studentAge" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Base_Column_List" >
        studentId, studentName, studentAge
    </sql>
    <sql id="Base_Where_List">
        <if test="studentName != null and studentName != ''">
            and studentName = #{studentName}
        </if>
        <if test="studentAge != null and studentAge != ''">
            and studentAge = #{studentAge}
        </if>
    </sql>

    <select id="getPageList" parameterType="com.avic.zemic.first.page.StudentParam" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from student
        where 1=1
        <include refid="Base_Where_List" />
        order by studentId desc
        limit #{beginLine}, #{pageSize}
    </select>

    <select id="getStudentCount" resultType="Integer" parameterType="com.avic.zemic.first.page.StudentParam">
        select
        count(1)
        from student
        where 1=1
        <include refid="Base_Where_List" />
    </select>

    <select id="getStudentAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from student
    </select>

    <select id="getStudentById" parameterType="Long" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from student
        where studentId = #{studentId}
    </select>

    <insert id="insertStudent" parameterType="com.avic.zemic.first.model.Student">
        insert into student (studentId, studentName, studentAge)
        values (#{studentId}, #{studentName}, #{studentAge})
    </insert>

    <update id="updateStudent" parameterType="com.avic.zemic.first.model.Student">
        update student set
            <if test="studentName != null"> studentName = #{studentName}, </if>
            <if test="studentAge != null"> studentAge = #{studentAge} </if>
        where studentId = #{studentId}
    </update>

    <delete id="deleteStudent" parameterType="Long">
        delete from student where studentId = #{studentId}
    </delete>
</mapper>